{"ast":null,"code":"import axios from \"axios\";\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\nvar baseURL;\n\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\") {\n  baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n  // baseURL = \"https://backend-dq-dairyqueen-jithin.herokuapp.com/\";\n  // baseURL=\"https://backend-sd-alisha.herokuapp.com/\";\n  baseURL = \"http://127.0.0.1:8000/\";\n}\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\napi.interceptors.request.use(config => {\n  if (localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common[\"Authorization\"] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.getPosts = async () => {\n      const posts = await api.get(\"/posts/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return posts;\n    };\n\n    this.addPost = async (name, body, image) => {\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"body\", body);\n      formData.append(\"image\", image);\n      const savedPost = await api.post(\"/posts/add/\", formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n\n    this.deletePost = async id => {\n      const response = await api.delete(\"/posts/delete/\" + id + \"/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n\n    this.getItems = async () => {\n      let url = \"/items/\";\n      const items = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return items;\n    };\n\n    this.signUp = async (user_name, email, password) => {\n      const savedPost = await api.post(\"/users/signup/\", {\n        user_name: user_name,\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n\n    this.signIn = async (email, password) => {\n      const savedPost = await api.post(\"/users/signin/\", {\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n\n    this.getCarts = async () => {\n      const carts = await api.get(\"carts/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return carts;\n    };\n\n    this.addCarts = async item_id => {\n      const savedCart = await api.post(\"/carts/add/\", {\n        item: item_id,\n        quantity: 1\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n\n    this.updateCarts = async (cart_id, quantity) => {\n      const savedCart = await api.put(\"/carts/update/\" + cart_id + \"/\", {\n        quantity: quantity\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n\n    this.deleteCart = async cart_id => {\n      const response = await api.delete(\"/carts/delete/\" + cart_id + \"/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n\n    this.orderAdd = async (params = {}) => {\n      const order = await api.post(\"/orders/add/\", params).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return order;\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/techi.s./Desktop/Dino Pizzeria/frontend/src/API.js"],"names":["axios","LOGIN_USER_KEY","baseURL","process","env","REACT_APP_ENVIRONMENT","REACT_APP_API_BASE_URL","api","create","headers","interceptors","request","use","config","localStorage","getItem","common","JSON","parse","token","err","console","error","API","getPosts","posts","get","then","response","data","catch","Error","addPost","name","body","image","formData","FormData","append","savedPost","post","deletePost","id","delete","getItems","url","items","signUp","user_name","email","password","signIn","getCarts","carts","addCarts","item_id","savedCart","item","quantity","updateCarts","cart_id","put","deleteCart","orderAdd","params","order"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\"\n\nvar baseURL;\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\") {\n    baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n    // baseURL = \"https://backend-dq-dairyqueen-jithin.herokuapp.com/\";\n    // baseURL=\"https://backend-sd-alisha.herokuapp.com/\";\n    baseURL= \"http://127.0.0.1:8000/\"\n}\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\napi.interceptors.request.use(\n    (config) => {\n      if (localStorage.getItem(LOGIN_USER_KEY)) {\n        config.headers.common[\"Authorization\"] = JSON.parse(\n          localStorage.getItem(LOGIN_USER_KEY)\n        ).token;\n      }\n      return config;\n    },\n    (err) => {\n      console.error(err);\n    }\n  );\n\nexport default class API {\n    getPosts = async () => {\n        const posts = await api\n            .get(\"/posts/\")\n            .then((response) => {\n                return response.data\n            })\n            .catch((error) => {\n                throw new Error(error)\n            })\n        return posts\n    }\n    addPost = async (name, body, image) => {\n        const formData = new FormData();\n        formData.append(\"name\", name);\n        formData.append(\"body\", body);\n        formData.append(\"image\", image);\n        const savedPost = await api\n            .post(\"/posts/add/\", formData)\n            .then((response) => {\n                return response.data\n            })\n            .catch((error) => {\n                throw new Error(error)\n            })\n        return savedPost\n    }\n    deletePost = async (id) => {\n        const response = await api\n            .delete(\"/posts/delete/\" + id + \"/\")\n            .then((response) => {\n                return response.data\n            })\n            .catch((error) => {\n                throw new Error(error)\n            })\n        return response\n    }\n\n// ///////////////////////////////\n// ITEM\n// //////////////////////////////\n\ngetItems = async () => {\n    let url = \"/items/\"\n    const items = await api\n        .get(url)\n        .then((response) => {\n            return response.data\n        })\n        .catch((error) => {\n            throw new Error(error)\n        });\n    return items\n}\n\n\nsignUp = async (user_name, email, password) => {\n    const savedPost = await api\n      .post(\"/users/signup/\", {\n        user_name: user_name,\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedPost;\n  };\n\n\nsignIn = async (email, password) => {\n    const savedPost = await api\n      .post(\"/users/signin/\", {\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedPost;\n  };\n\n  getCarts = async () => {\n    const carts = await api\n      .get(\"carts/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return carts;\n  };\n  \n  addCarts = async (item_id) => {\n    const savedCart = await api\n      .post(\"/carts/add/\", {\n        item: item_id,\n        quantity: 1,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedCart;\n  };\n\n  updateCarts = async (cart_id, quantity) => {\n    const savedCart = await api\n      .put(\"/carts/update/\" + cart_id + \"/\", {\n        quantity: quantity,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedCart;\n  };\n\n  deleteCart = async (cart_id) => {\n    const response = await api\n      .delete(\"/carts/delete/\" + cart_id + \"/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return response;\n  };\n\n  orderAdd = async (params = {}) => {\n    const order = await api\n      .post(\"/orders/add/\", params)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return order;\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}